#
# MCC - My Container Cluster
# https://github.com/dealfonso/my_container_cluster
#
# Copyright (C) GRyCAP - I3M - UPV 
# Developed by Carlos A. caralla@upv.es
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# COMMON - general variables: path, etc.
# Commandline to access to the lxd daemon

# This is the lxd socket if LXD is installed using snap
LXD_SOCKET=/var/snap/lxd/common/lxd/unix.socket
# This is the lxd socket if LXD is installed from the repositories
LXD_SOCKET=/var/lib/lxd/unix.socket

# Basic command to access the LXD daemon
CURL_CMD="curl -sf --unix-socket $LXD_SOCKET http:"
# The default image for the front-end
MCC_DEFAULT_IMAGE_FRONTEND=ubuntu:
# The default image for the working nodes
MCC_DEFAULT_IMAGE_WN=ubuntu:
# Names of the executables that will be executed on each corresponding action (i.e. launch the node, add a node to the cluster, remove a node from the cluster)
# * If it exists a folder named contextnode.d inside the MCC_ETC_REMOTE_FOLDER, its contents will be executed just after the container has been launched
MCC_SCRIPT_CONTEXT="context-node"
# * If it exists a folder named addnode.d inside the MCC_ETC_REMOTE_FOLDER, its contents will be executed AFTER adding the node
MCC_SCRIPT_ADDNODE="add-node"
# * If it exists a folder named removenode.d inside the MCC_ETC_REMOTE_FOLDER, its contents will be executed BEFORE removing the node
MCC_SCRIPT_REMOVENODE="remove-node"
# Path in the container where the previous files are stored (in the container)
MCC_REMOTE_FOLDER="/opt/context/mcc"
# Path in the container where the contextualization scripts will be stored (those that will be executed on the creation of the node)
# * warning: this MUST coincide with the path in the file context-node
MCC_ETC_REMOTE_FOLDER="/etc/mcc/"
# Name of the file in which the configuration variables are stored
MCC_VARFILES="cluster.conf"
# The maximum number of nodes for any cluster (this should be moved to per-cluster)
MAXNODES=100
# Possible shells in the container (for the option --enter-cluster)
MCC_SHELLS="bash sh"

# DEVICES - devices-related variables

# Path where the devices shared folders will be stored (in this path, MCC will create a folder per each cluster that needs a shared folder)
MCC_SHAREDFOLDER_PATH=/var/tmp/mcc
# Path where the description of the devices will be stored (in this path, MCC will create a folder per each cluster that needs devices)
MCC_DEVICES_FOLDER_PATH=/var/tmp/mcc
# Path where the file that describes the devices is stored in the container
MCC_DEVICES_REMOTE_FOLDER_PATH=/etc/mcc/devices/
# Base filename for the devices filename. The name convention will be ${MCC_DEVICES_FILE}.nodename
MCC_DEVICES_FILE=devices
# This flag set to "True" (take care of the letter case) will try to chown the folders of a shared folders to the proper permissions 
#   in the container that is pseudo-exporting it taking into account the id remapping
MCC_DEVICES_SHAREDFOLDER_REMAP_PERMISSIONS=True

# Platform

# Additional options to the lxc commandline to launch a container
# * this is specially useful to include the profile to be used (e.g. the default profile already has a NIC that will not be useful for us
#   because we want our FIRST NIC to connect then cluster)
# In order to be easier to launch containers, I enable to get the options from a variable in env
LXC_LAUNCH_OPTS=${MCC_LXC_LAUNCH_OPTS:-""}
# Additional options to be included when creating a network (is of special interest to attach to specific bridges)
LXC_NETWORK_CREATE_OPTS=
