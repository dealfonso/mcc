#!/bin/bash
#
# MCC - My Container Cluster
# https://github.com/dealfonso/my_container_cluster
#
# Copyright (C) GRyCAP - I3M - UPV 
# Developed by Carlos A. caralla@upv.es
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

function list() {
    _HELP__reset_help
    _HELP__append_description "Lists the clusters managed by MCC along with some of its features"
    _HELP__add_help_cmd "--help|-h" "shows this help and exists"
    _HELP__add_help_cmd "--silent|-s" "does not print the header"
    _HELP__add_help_cmd "--show-nodes|-N" "lists the nodes and front-ends managed by mcc instead of the clusters"

    local SHOWNODES SILENT
    while (( $# > 0 )); do
        case "$1" in
            --silent|-s)            SILENT=True;;
            --show-nodes|-N)        SHOWNODES=True;;
            --help | -h)            _HELP__usage list && exit 0;;
            *)                      _HELP__usage list && exit 1;;
        esac
        shift
    done

    local CLUSTERNAME
    local C_INFO

    if [ "$SHOWNODES" == "True" ]; then 
        # If we wanted to show the nodes, simply show the list of containers in the system
        _MCC__get_container_list
        return $?
    else
        # Otherwise, get the information about the clusters and show them
        { 
            [ "$SILENT" != "True" ] && echo "Name;Networks;IPs;Nodes"
            for CLUSTERNAME in $(_CLUSTER__get_list); do
                C_INFO=$(_CLUSTER__get_info $CLUSTERNAME)
                if (($? == 0)); then
                    echo "$C_INFO" | tr '\n' ' '
                    echo
                fi
            done 
        } | column -t -s ';'
    fi
    return 0
}